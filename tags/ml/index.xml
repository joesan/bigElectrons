<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ml on bigelectrons</title><link>https://bigelectrons.com/tags/ml/</link><description>Recent content in ml on bigelectrons</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Copyright Â© 2018 - 2022 @ https://github.com/Joesan</copyright><lastBuildDate>Mon, 21 Oct 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://bigelectrons.com/tags/ml/index.xml" rel="self" type="application/rss+xml"/><item><title>Math behind simple Linear Regression</title><link>https://bigelectrons.com/post/math/linear-regression/</link><pubDate>Mon, 21 Oct 2019 00:00:00 +0000</pubDate><guid>https://bigelectrons.com/post/math/linear-regression/</guid><description>
I have been wondering on how the math behind a Linear regression works as in most of the ML books that you encounter, the focus will be on giving you a linear equation and just plugging this equation in a Python library to solve for the slope and bias and then use it to predict the new values. It is very rare that they show you how to find the m and b values.</description></item></channel></rss>